/*
This file is part of Envision.

Envision is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Envision is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Envision.  If not, see <http://www.gnu.org/licenses/>

Copywrite 2012 - Oregon State University

*/
/* soapStub.h
   Generated by gSOAP 2.7.16 from EnvWebServices.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_NAMESPACE_OF_ns1	"http://envision.bioe.orst.edu/"
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE__ns1__GetEnvisionSetupDateTime
#define SOAP_TYPE__ns1__GetEnvisionSetupDateTime (7)
/* ns1:GetEnvisionSetupDateTime */
class SOAP_CMAC _ns1__GetEnvisionSetupDateTime
{
public:
	char *build;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 7; } /* = unique id SOAP_TYPE__ns1__GetEnvisionSetupDateTime */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetEnvisionSetupDateTime(): build(NULL), soap(NULL) { _ns1__GetEnvisionSetupDateTime::soap_default(NULL); }
	virtual ~_ns1__GetEnvisionSetupDateTime() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetEnvisionSetupDateTimeResponse
#define SOAP_TYPE__ns1__GetEnvisionSetupDateTimeResponse (8)
/* ns1:GetEnvisionSetupDateTimeResponse */
class SOAP_CMAC _ns1__GetEnvisionSetupDateTimeResponse
{
public:
	time_t GetEnvisionSetupDateTimeResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique id SOAP_TYPE__ns1__GetEnvisionSetupDateTimeResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetEnvisionSetupDateTimeResponse(): soap(NULL) { _ns1__GetEnvisionSetupDateTimeResponse::soap_default(NULL); }
	virtual ~_ns1__GetEnvisionSetupDateTimeResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetEnvisionVersion
#define SOAP_TYPE__ns1__GetEnvisionVersion (9)
/* ns1:GetEnvisionVersion */
class SOAP_CMAC _ns1__GetEnvisionVersion
{
public:
	char *build;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 9; } /* = unique id SOAP_TYPE__ns1__GetEnvisionVersion */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetEnvisionVersion(): build(NULL), soap(NULL) { _ns1__GetEnvisionVersion::soap_default(NULL); }
	virtual ~_ns1__GetEnvisionVersion() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetEnvisionVersionResponse
#define SOAP_TYPE__ns1__GetEnvisionVersionResponse (10)
/* ns1:GetEnvisionVersionResponse */
class SOAP_CMAC _ns1__GetEnvisionVersionResponse
{
public:
	LONG64 GetEnvisionVersionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 10; } /* = unique id SOAP_TYPE__ns1__GetEnvisionVersionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetEnvisionVersionResponse(): soap(NULL) { _ns1__GetEnvisionVersionResponse::soap_default(NULL); }
	virtual ~_ns1__GetEnvisionVersionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetStudyAreaSetupDateTime
#define SOAP_TYPE__ns1__GetStudyAreaSetupDateTime (11)
/* ns1:GetStudyAreaSetupDateTime */
class SOAP_CMAC _ns1__GetStudyAreaSetupDateTime
{
public:
	char *studyArea;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 11; } /* = unique id SOAP_TYPE__ns1__GetStudyAreaSetupDateTime */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetStudyAreaSetupDateTime(): studyArea(NULL), soap(NULL) { _ns1__GetStudyAreaSetupDateTime::soap_default(NULL); }
	virtual ~_ns1__GetStudyAreaSetupDateTime() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetStudyAreaSetupDateTimeResponse
#define SOAP_TYPE__ns1__GetStudyAreaSetupDateTimeResponse (12)
/* ns1:GetStudyAreaSetupDateTimeResponse */
class SOAP_CMAC _ns1__GetStudyAreaSetupDateTimeResponse
{
public:
	time_t GetStudyAreaSetupDateTimeResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 12; } /* = unique id SOAP_TYPE__ns1__GetStudyAreaSetupDateTimeResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetStudyAreaSetupDateTimeResponse(): soap(NULL) { _ns1__GetStudyAreaSetupDateTimeResponse::soap_default(NULL); }
	virtual ~_ns1__GetStudyAreaSetupDateTimeResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetStudyAreaVersion
#define SOAP_TYPE__ns1__GetStudyAreaVersion (13)
/* ns1:GetStudyAreaVersion */
class SOAP_CMAC _ns1__GetStudyAreaVersion
{
public:
	char *studyArea;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 13; } /* = unique id SOAP_TYPE__ns1__GetStudyAreaVersion */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetStudyAreaVersion(): studyArea(NULL), soap(NULL) { _ns1__GetStudyAreaVersion::soap_default(NULL); }
	virtual ~_ns1__GetStudyAreaVersion() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetStudyAreaVersionResponse
#define SOAP_TYPE__ns1__GetStudyAreaVersionResponse (14)
/* ns1:GetStudyAreaVersionResponse */
class SOAP_CMAC _ns1__GetStudyAreaVersionResponse
{
public:
	LONG64 GetStudyAreaVersionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique id SOAP_TYPE__ns1__GetStudyAreaVersionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetStudyAreaVersionResponse(): soap(NULL) { _ns1__GetStudyAreaVersionResponse::soap_default(NULL); }
	virtual ~_ns1__GetStudyAreaVersionResponse() { }
};
#endif

#ifndef SOAP_TYPE___ns2__GetEnvisionSetupDateTime
#define SOAP_TYPE___ns2__GetEnvisionSetupDateTime (21)
/* Operation wrapper: */
struct __ns2__GetEnvisionSetupDateTime
{
public:
	_ns1__GetEnvisionSetupDateTime *ns1__GetEnvisionSetupDateTime;	/* optional element of type ns1:GetEnvisionSetupDateTime */
};
#endif

#ifndef SOAP_TYPE___ns2__GetEnvisionVersion
#define SOAP_TYPE___ns2__GetEnvisionVersion (25)
/* Operation wrapper: */
struct __ns2__GetEnvisionVersion
{
public:
	_ns1__GetEnvisionVersion *ns1__GetEnvisionVersion;	/* optional element of type ns1:GetEnvisionVersion */
};
#endif

#ifndef SOAP_TYPE___ns2__GetStudyAreaSetupDateTime
#define SOAP_TYPE___ns2__GetStudyAreaSetupDateTime (29)
/* Operation wrapper: */
struct __ns2__GetStudyAreaSetupDateTime
{
public:
	_ns1__GetStudyAreaSetupDateTime *ns1__GetStudyAreaSetupDateTime;	/* optional element of type ns1:GetStudyAreaSetupDateTime */
};
#endif

#ifndef SOAP_TYPE___ns2__GetStudyAreaVersion
#define SOAP_TYPE___ns2__GetStudyAreaVersion (33)
/* Operation wrapper: */
struct __ns2__GetStudyAreaVersion
{
public:
	_ns1__GetStudyAreaVersion *ns1__GetStudyAreaVersion;	/* optional element of type ns1:GetStudyAreaVersion */
};
#endif

#ifndef SOAP_TYPE___ns3__GetEnvisionSetupDateTime
#define SOAP_TYPE___ns3__GetEnvisionSetupDateTime (35)
/* Operation wrapper: */
struct __ns3__GetEnvisionSetupDateTime
{
public:
	_ns1__GetEnvisionSetupDateTime *ns1__GetEnvisionSetupDateTime;	/* optional element of type ns1:GetEnvisionSetupDateTime */
};
#endif

#ifndef SOAP_TYPE___ns3__GetEnvisionVersion
#define SOAP_TYPE___ns3__GetEnvisionVersion (37)
/* Operation wrapper: */
struct __ns3__GetEnvisionVersion
{
public:
	_ns1__GetEnvisionVersion *ns1__GetEnvisionVersion;	/* optional element of type ns1:GetEnvisionVersion */
};
#endif

#ifndef SOAP_TYPE___ns3__GetStudyAreaSetupDateTime
#define SOAP_TYPE___ns3__GetStudyAreaSetupDateTime (39)
/* Operation wrapper: */
struct __ns3__GetStudyAreaSetupDateTime
{
public:
	_ns1__GetStudyAreaSetupDateTime *ns1__GetStudyAreaSetupDateTime;	/* optional element of type ns1:GetStudyAreaSetupDateTime */
};
#endif

#ifndef SOAP_TYPE___ns3__GetStudyAreaVersion
#define SOAP_TYPE___ns3__GetStudyAreaVersion (41)
/* Operation wrapper: */
struct __ns3__GetStudyAreaVersion
{
public:
	_ns1__GetStudyAreaVersion *ns1__GetStudyAreaVersion;	/* optional element of type ns1:GetStudyAreaVersion */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (42)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (43)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (45)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (48)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (49)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
